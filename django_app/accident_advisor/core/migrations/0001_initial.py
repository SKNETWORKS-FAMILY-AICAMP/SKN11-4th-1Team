# Generated by Django 5.2.1 on 2025-06-04 06:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AccidentCase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                (
                    "case_id",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="사례 ID"
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="사례 제목")),
                ("description", models.TextField(verbose_name="사고 상황 설명")),
                (
                    "fault_ratio_a",
                    models.IntegerField(verbose_name="A차량 과실비율(%)"),
                ),
                (
                    "fault_ratio_b",
                    models.IntegerField(verbose_name="B차량 과실비율(%)"),
                ),
                (
                    "case_type",
                    models.CharField(
                        help_text="교차로, 주차장, 차로변경 등",
                        max_length=50,
                        verbose_name="사고 유형",
                    ),
                ),
                (
                    "legal_basis",
                    models.TextField(
                        blank=True,
                        help_text="도로교통법 조문, 판례 등",
                        verbose_name="법적 근거",
                    ),
                ),
            ],
            options={
                "verbose_name": "교통사고 사례",
                "verbose_name_plural": "교통사고 사례들",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="카테고리명"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="카테고리 설명"),
                ),
                (
                    "icon",
                    models.CharField(
                        default="📝",
                        help_text="이모지 하나",
                        max_length=10,
                        verbose_name="아이콘",
                    ),
                ),
                (
                    "post_count",
                    models.IntegerField(default=0, verbose_name="게시글 수"),
                ),
            ],
            options={
                "verbose_name": "카테고리",
                "verbose_name_plural": "카테고리들",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "nickname",
                    models.CharField(
                        blank=True,
                        help_text="사용자의 표시 이름",
                        max_length=20,
                        unique=True,
                        verbose_name="닉네임",
                    ),
                ),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True, upload_to="profiles/", verbose_name="프로필 이미지"
                    ),
                ),
                (
                    "total_chats",
                    models.IntegerField(default=0, verbose_name="총 채팅 수"),
                ),
                (
                    "total_posts",
                    models.IntegerField(default=0, verbose_name="총 게시글 수"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="가입일"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "사용자",
                "verbose_name_plural": "사용자들",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ChatSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                (
                    "session_id",
                    models.CharField(
                        default=uuid.uuid4,
                        max_length=50,
                        unique=True,
                        verbose_name="세션 ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        default="새 상담", max_length=100, verbose_name="상담 제목"
                    ),
                ),
                (
                    "message_count",
                    models.IntegerField(default=0, verbose_name="메시지 수"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="활성 상태"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_sessions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="사용자",
                    ),
                ),
            ],
            options={
                "verbose_name": "채팅 세션",
                "verbose_name_plural": "채팅 세션들",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                (
                    "sender",
                    models.CharField(
                        choices=[("user", "사용자"), ("bot", "챗봇")],
                        max_length=10,
                        verbose_name="발신자",
                    ),
                ),
                ("content", models.TextField(verbose_name="메시지 내용")),
                (
                    "ai_confidence",
                    models.FloatField(blank=True, null=True, verbose_name="AI 신뢰도"),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="core.chatsession",
                        verbose_name="채팅 세션",
                    ),
                ),
            ],
            options={
                "verbose_name": "채팅 메시지",
                "verbose_name_plural": "채팅 메시지들",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                ("title", models.CharField(max_length=200, verbose_name="제목")),
                ("content", models.TextField(verbose_name="내용")),
                (
                    "post_type",
                    models.CharField(
                        choices=[
                            ("question", "질문"),
                            ("experience", "경험담"),
                            ("tip", "팁 공유"),
                        ],
                        default="question",
                        max_length=20,
                        verbose_name="게시글 유형",
                    ),
                ),
                (
                    "is_resolved",
                    models.BooleanField(
                        default=False,
                        help_text="질문이 해결되었는지 여부",
                        verbose_name="해결됨",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="활성 상태"),
                ),
                ("view_count", models.IntegerField(default=0, verbose_name="조회수")),
                (
                    "like_count",
                    models.IntegerField(default=0, verbose_name="좋아요 수"),
                ),
                (
                    "comment_count",
                    models.IntegerField(default=0, verbose_name="댓글 수"),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        help_text="쉼표로 구분해서 입력 (예: 교차로,사고,과실비율)",
                        max_length=200,
                        verbose_name="태그",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="작성자",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.category",
                        verbose_name="카테고리",
                    ),
                ),
            ],
            options={
                "verbose_name": "게시글",
                "verbose_name_plural": "게시글들",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                ("content", models.TextField(verbose_name="댓글 내용")),
                (
                    "like_count",
                    models.IntegerField(default=0, verbose_name="좋아요 수"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="활성 상태"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="작성자",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="core.post",
                        verbose_name="게시글",
                    ),
                ),
            ],
            options={
                "verbose_name": "댓글",
                "verbose_name_plural": "댓글들",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="CommentLike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                (
                    "comment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.comment",
                        verbose_name="댓글",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="사용자",
                    ),
                ),
            ],
            options={
                "verbose_name": "댓글 좋아요",
                "verbose_name_plural": "댓글 좋아요들",
                "unique_together": {("user", "comment")},
            },
        ),
        migrations.CreateModel(
            name="PostLike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.post",
                        verbose_name="게시글",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="사용자",
                    ),
                ),
            ],
            options={
                "verbose_name": "게시글 좋아요",
                "verbose_name_plural": "게시글 좋아요들",
                "unique_together": {("user", "post")},
            },
        ),
    ]
